package me.revqz.playervaults;

import org.bukkit.Bukkit;
import org.bukkit.Material;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.inventory.InventoryClickEvent;
import org.bukkit.inventory.Inventory;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.ItemMeta;
import org.bukkit.plugin.java.JavaPlugin;

import java.util.HashMap;
import java.util.Map;
import java.util.UUID;

public class PlayerVaultsPlugin extends JavaPlugin implements Listener {

    private final Map<UUID, Map<Integer, Inventory>> playerVaults = new HashMap<>();
    private BankPlugin bankPlugin;
    private final int VAULT_COST = 10; // Diamonds required per additional vault

    @Override
    public void onEnable() {
        Bukkit.getPluginManager().registerEvents(this, this);
        this.bankPlugin = (BankPlugin) getServer().getPluginManager().getPlugin("BankPlugin");
        getLogger().info("PlayerVaults Plugin enabled!");
    }

    @Override
    public boolean onCommand(org.bukkit.command.CommandSender sender, org.bukkit.command.Command command, String label, String[] args) {
        if (!(sender instanceof Player)) {
            sender.sendMessage("Only players can use this command.");
            return true;
        }

        Player player = (Player) sender;
        UUID playerUUID = player.getUniqueId();

        if (command.getName().equalsIgnoreCase("pv")) {
            if (args.length == 1) {
                try {
                    int vaultNumber = Integer.parseInt(args[0]);
                    openPlayerVault(player, vaultNumber);
                } catch (NumberFormatException e) {
                    player.sendMessage("Invalid vault number.");
                }
                return true;
            }
        }
        
        if (command.getName().equalsIgnoreCase("pvupgrade")) {
            openUpgradeGUI(player);
            return true;
        }

        return false;
    }

    private void openPlayerVault(Player player, int vaultNumber) {
        UUID playerUUID = player.getUniqueId();
        playerVaults.putIfAbsent(playerUUID, new HashMap<>());
        
        Map<Integer, Inventory> vaults = playerVaults.get(playerUUID);
        
        if (!vaults.containsKey(vaultNumber)) {
            player.sendMessage("You don't have access to this vault. Upgrade using /pvupgrade.");
            return;
        }
        
        player.openInventory(vaults.get(vaultNumber));
    }

    private void openUpgradeGUI(Player player) {
        Inventory upgradeGUI = Bukkit.createInventory(null, 27, "Vault Upgrades");
        
        ItemStack upgradeItem = new ItemStack(Material.DIAMOND);
        ItemMeta meta = upgradeItem.getItemMeta();
        if (meta != null) {
            meta.setDisplayName("Upgrade Vault (" + VAULT_COST + " Diamonds)");
            upgradeItem.setItemMeta(meta);
        }
        
        upgradeGUI.setItem(13, upgradeItem);
        player.openInventory(upgradeGUI);
    }

    @EventHandler
    public void onInventoryClick(InventoryClickEvent event) {
        if (event.getView().getTitle().equals("Vault Upgrades")) {
            event.setCancelled(true);
            Player player = (Player) event.getWhoClicked();
            
            if (event.getCurrentItem() != null && event.getCurrentItem().getType() == Material.DIAMOND) {
                int balance = bankPlugin.getBalance(player);
                
                if (balance >= VAULT_COST) {
                    bankPlugin.withdraw(player, VAULT_COST);
                    addVaultToPlayer(player);
                    player.sendMessage("You have unlocked a new vault!");
                } else {
                    player.sendMessage("You need more diamonds to upgrade!");
                }
            }
        }
    }

    private void addVaultToPlayer(Player player) {
        UUID playerUUID = player.getUniqueId();
        playerVaults.putIfAbsent(playerUUID, new HashMap<>());
        
        int newVaultNumber = playerVaults.get(playerUUID).size() + 1;
        Inventory newVault = Bukkit.createInventory(null, 54, "Player Vault " + newVaultNumber);
        playerVaults.get(playerUUID).put(newVaultNumber, newVault);
    }
}
